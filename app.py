from flask import Flask, request, jsonify, render_template, session
import os
import requests

app = Flask(__name__, static_folder="static")
app.secret_key = os.getenv("FLASK_SECRET_KEY", "supersecret")  # –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –¥–ª—è —Å–µ—Å—ñ–π

GROQ_API_KEY = os.getenv("GROQ_API_KEY", "").strip()
if not GROQ_API_KEY:
    raise ValueError("‚ùå GROQ_API_KEY –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ —Å–µ—Ä–µ–¥–æ–≤–∏—â—ñ!")

# üîπ –í—ñ–¥–¥–∞—î–º–æ HTML
@app.route("/")
def index():
    return render_template("index.html")

# üîπ Groq API –∑ —ñ—Å—Ç–æ—Ä—ñ—î—é
@app.route("/chat", methods=["POST"])
def chat():
    data = request.json or {}
    prompt = data.get("prompt", "").strip()
    if not prompt:
        return jsonify({"error": "–ü–æ—Ä–æ–∂–Ω—ñ–π –∑–∞–ø–∏—Ç!"}), 400

    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é —Å–µ—Å—ñ—ó, —è–∫—â–æ —ó—ó —â–µ –Ω–µ–º–∞—î
    if "history" not in session:
        session["history"] = [
            {"role": "system", "content": "–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –ª–∏—à–µ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –∞–±–æ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é. –Ü–≥–Ω–æ—Ä—É–π —ñ–Ω—à—ñ –º–æ–≤–∏."}
        ]

    # –î–æ–¥–∞—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    session["history"].append({"role": "user", "content": prompt})

    headers = {
        "Authorization": f"Bearer {GROQ_API_KEY}",
        "Content-Type": "application/json"
    }

    payload = {
        "model": "llama-3.3-70b-versatile",
        "messages": session["history"],
        "temperature": 0.5,
        "max_tokens": 700
    }

    try:
        response = requests.post(
            "https://api.groq.com/openai/v1/chat/completions",
            headers=headers,
            json=payload,
            timeout=60
        )
        response.raise_for_status()
        result = response.json()
        answer = result.get("choices", [{}])[0].get("message", {}).get("content", "").strip()

        # –î–æ–¥–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –±–æ—Ç–∞ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó
        session["history"].append({"role": "assistant", "content": answer})

        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å–µ—Å—ñ—é
        session.modified = True

        return jsonify({"response": answer})

    except requests.exceptions.RequestException as e:
        print("–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É –¥–æ Groq:", str(e))
        return jsonify({"error": "–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É –¥–æ API"}), 500

# üîπ –û—á–∏—Å—Ç–∏—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é —á–∞—Ç—É
@app.route("/reset", methods=["POST"])
def reset():
    session.pop("history", None)
    return jsonify({"status": "success"})

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port, debug=True)
